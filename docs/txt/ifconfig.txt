ifconfig (Interface configurator) - display your ip address, network interfaces, transferred and received data information, configure a network interface. On most modern distributions ifconfig has been depracated, use ip instead.


Syntax

      ifconfig [interface]

      ifconfig interface [aftype] options | address ...


Options

   interface    The name of the interface.
                Usually a driver name followed by a unit number, eth0 = 1st Ethernet interface. 

   up           This flag causes the interface to be activated.
                It is implicitly specified if an address is assigned to the interface. 

   down         This flag causes the driver for this interface to be shut down. 

   [-]arp       Enable or disable the use of the ARP protocol on this interface. 

   [-]promisc   Enable or disable the promiscuous mode of the interface.
                If selected, all packets on the network will be received by the interface. 

   [-]allmulti  Enable or disable all-multicast mode.
                If selected, all multicast packets on the network will be received by the interface. 

   metric N     Set the interface metric. 

   mtu N        Set the Maximum Transfer Unit (MTU) of an interface.
                To make this change permanent, edit:
                /etc/network/interfaces    Debian / Ubuntu
                /etc/sysconfig/network-scripts/ifcfg-eth0   CentOS/RHEL/Fedora

   dstaddr addr    Set the remote IP address for a point-to-point (PPP)link (obsolete; use pointopoint instead) 

   netmask addr    Set the IP network mask for this interface.
                   This value defaults to the usual class A, B or C network mask
                   (as derived from the interface IP address), but it can be set to any value. 

   add addr/prefixlen    Add an IPv6 address to an interface. 

   del addr/prefixlen    Remove an IPv6 address from an interface.

   tunnel aa.bb.cc.dd    Create a new SIT (IPv6-in-IPv4) device, tunnelling to the given destination. 

   irq addr         Set the interrupt line used by this device.
                    Not all devices can dynamically change their IRQ setting. 

   io_addr addr    Set the start address in I/O space for this device. 

   mem_start addr  Set the start address for shared memory used by this device.
                   Only a few devices need this. 

   media type      Set the physical port or medium type to be used by the device.
                   Not all devices can change this setting, and those that can vary
                   in what values they support. Typical values for type are 10base2 (thin Ethernet),
                   10baseT (twisted-pair 10Mbps Ethernet), AUI (external transceiver) and so on.
                   The special medium type of auto can be used to tell the driver to auto-sense the
                   media. Again, not all drivers can do this. 

   [-]broadcast [addr]    If the address argument is given, set the protocol broadcast address
                          for this interface. Otherwise, set (or clear) the IFF_BROADCAST flag for
                          the interface. 

   [-]pointopoint [addr]  This keyword enables the point-to-point mode of an interface,meaning that 
                          it is a direct link between two machines with nobody else listening on it.
                          If the address argument is also given, set the protocol address of the other
                          side of the link, just like the obsolete dstaddr keyword does.
                          Otherwise, set or clear the IFF_POINTOPOINT flag for the interface. 

   hw class address    Set the hardware address of this interface, if the device driver supports
                       this operation. The keyword must be followed by the name of the hardware class
                       and the printable ASCII equivalent of the hardware address. Hardware classes
                       currently supported include ether (Ethernet), ax25 (AMPR AX.25), ARCnet and
                       netrom (AMPR NET/ROM). 

   multicast           Set the multicast flag on the interface. Not normally be needed as
                       the drivers set the flag correctly themselves. 

   address             The IP address to be assigned to this interface. 

   txqueuelen length   Set the length of the transmit queue of the device.
                       It is useful to set this to small values for slower devices with a high
                       latency (modem links, ISDN) to prevent fast bulk transfers from disturbing
                       interactive traffic like telnet too much.

ifconfig is used at boot time to set up interfaces as necessary. After that, it is usually only needed when debugging or when system tuning is needed.

If no arguments are given, ifconfig displays the status of the currently active interfaces. If a single interface argument is given, it displays the status of the given interface only; if a single -a argument is given, it displays the status of all interfaces, even those that are down. Otherwise, it configures an interface.

If the first argument after the interface name is recognized as the name of a supported address family, that address family is used for decoding and displaying all protocol addresses. Currently supported address families include inet (TCP/IP, default), inet6 (IPv6), ax25 (AMPR Packet Radio), ddp (Appletalk Phase 2), ipx (Novell IPX) and netrom (AMPR Packet radio).

All numbers supplied as parts in IPv4 dotted decimal notation can be decimal, octal, or hexadecimal, as specified in the ISO C standard (that is, a leading 0x or 0X implies hexadecimal; otherwise, a leading '0' implies octal; otherwise, the number is interpreted as decimal). Use of hexamedial and octal numbers is not RFC-compliant and therefore its use is discouraged and might go away.


Examples:

Change the state of the network interface device(s) to UP:
$ ifconfig eth0 up

Change the state of the network interface device(s) to DOWN: (see also ip link)
$ ifconfig eth0 dn

Display the mac address for eth0 (via StackOverflow)
$ ifconfig eth0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'

Change/spoof the hardware mac address of eth0 to 41:5b:8f:64:64:ef
$ sudo ifconfig eth0 down hw ether 41:5b:8f:64:64:ef
$ sudo ifconfig eth0 up
By default the MAC address will be reset when you restart the computer. To make the change permanent, modify the appropriate boot configuration file under /etc/network/interfaces.d/ or /etc/network/interfaces


*See also: route, netstat, arp, rarp, ip, ipchains