tty - displays the information related to terminal. It basically prints the file name of the terminal connected to standard input.
Syntax:
tty [OPTION]...
Example:
sudo tty

Options:
-s, ––silent, ––quiet: Prints nothing, only returns an exit status.
-a:which displays the name of all currently active terminals,
-h: which displays the full path name of the terminal device file.
––help: It will display the help message and exit.
––version: Prints the version information and exits.











Type
type is used to describe how its argument would be translated if used as commands. It is also used to find out whether it is built-in or external binary file.
Syntax:
type [Options] command names
Examples:


t : This option will display a single word as an output.
alias – if command is a shell alias
keyword – if command is a shell reserved word
builtin – if command is a shell builtin
function – if command is a shell function
file – if command is a disk file
type -t pwd
type -t cp
type -t ls
type -t while









Ulimit
ulimit is admin access required Linux shell command which is used to see, set, or limit the resource usage of the current user. It is used to return the number of open file descriptors for each process. It is also used to set restrictions on the resources used by a process.
Syntax:
To check the ulimit value use the following command:
ulimit -a
Examples:
To display maximum users process or for showing maximum user process limit for the logged-in user.
ulimit –u

For showing the maximum file size a user can have.
ulimit –f










Umask
The umask command in Linux is used to set default permissions for files or directories the user creates.
Syntax:
$umask

For a better understanding of umask working, we need to understand octal mode security settings. The three rwx permissions (Read-Write-Execute) values are converted into three-bit binary values and represented by a single octal value as shown in the following table:



How to set and update the default umask value?
We can set and update the default umask value using the command umask followed by a parameter, which should be an integer ranging from 000-777. The syntax for updating the umask value is the same as setting the umask value.
Setting the umask value:
We can use the umask command to set the default permissions with which the files/directories will be created.
Example:
$umask 543


Making a directory:
When we make a new directory, the permissions will be calculated as (full permissions for directory) – (umask value) i.e. 777 – 543 = 234
234, can be clarified more as:
2 for the owner, that is 010 in binary, so write permissions for the owner.
3 for the group members, that is 011 in binary, so write and execute permissions for the group members.
4 for everyone else, that is 100 in binary, so only read permission for everyone else.








Umount
The umount command is used to detach mounted file systems from their mount points. It is crucial to unmount a file system before physically removing a storage device or making changes to its configuration. It is a critical tool for safely disconnecting storage devices, such as USB drives or network shares, from the Linux file system.
The command ensures that any ongoing file operations are completed, preventing data corruption or loss. Users typically use this command to release resources and make devices available for removal or maintenance.
Syntax:
umount [OPTIONS] [TARGET]
OPTIONS: Optional flags or parameters that modify the behavior of the umount command.
TARGET: The directory or device path indicating the location to be unmounted.

Unmounting Network File Systems
To unmount the Network File System, execute the below command.
sudo umount /mnt/nfs









