export is bash shell BUILTINS commands, which means it is part of the shell. It marks an environment variables to be exported to child-processes.  

Export is defined in POSIX as The shell shall give the export attribute to the variables corresponding to the specified names, which shall cause them to be in the environment of subsequently executed commands. If the name of a variable is followed by = word, then the value of that variable shall be set to the word. In simple terms, environment variables are set when you open a new shell session. at any time if you change any of the variable values, the shell has no way of picking that change. The export command, on the other hand, provides the ability to update the current shell session about the change you made to the exported variable. You donâ€™t have to wait until new shell session to use the value of the variable you changed. 


<s1>Syntax</s1>

      export [-fn] [name[=value]]

      export -p


<s1>Options</s1>

      -f   The names refer to shell functions; 
           otherwise the names refer to shell variables.

   value   The value of the variable is set to value.

      -n   No longer mark each name for export.

      -p   Print a list of all the names exported in this shell.
           This is also the default action if no name is given.
If no names are supplied, or if the '-p' option is given, a list of exported names is displayed.


<s1>Examples</s1>

$ export -p

Without any argument: To view all the exported variables.   

<img src="img/export (1).png" width="700" height="auto" alt="Description of export">


*See also: env, echo, hostname, local, printenv, readonly, shift, unset, Variables