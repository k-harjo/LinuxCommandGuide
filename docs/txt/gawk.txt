gawk command in Linux is used for pattern scanning and processing language. The awk command requires no compiling and allows the user to use variables, numeric functions, string functions, and logical operators. It is a utility that enables programmers to write tiny and effective programs in the form of statements that define text patterns that are to be searched for, in a text document and the action that is to be taken when a match is found within a line.

gawk command can be used to :  

	-Scans a file line by line. 

	-Splits each input line into fields. 

	-Compares input line/fields to pattern. 

	-Performs action(s) on matched lines. 

	-Transform data files. 

	-Produce formatted reports. 

	-Format output lines. 

	-Arithmetic and string operations. 

	-Conditionals and loops. 


Syntax

      awk <options> 'Program' Input-File1 Input-File2 ...

      awk -f PROGRAM-FILE <options> Input-File1 Input-File2 ...


Key

 -F FS
 --field-separator FS
     Use FS for the input field separator (the value of the 'FS' predefined variable).

 -f PROGRAM-FILE
 --file PROGRAM-FILE
     Read the awk program source from the file PROGRAM-FILE, instead of from the first
     command line argument.

 -mf NNN
 -mr NNN
     The 'f' flag sets the maximum number of fields, and the 'r' flag sets the maximum
     record size.  These options are ignored by 'gawk', since 'gawk' has no predefined limits;
     they are only for compatibility with the Bell Labs research version of Unix awk.

 -v VAR=VAL
 --assign VAR=VAL
     Assign the variable VAR the value VAL before program execution begins.

 -W traditional
 -W compat
 --traditional
 --compat
     Use compatibility mode, in which 'gawk' extensions are turned off.

 -W lint
 --lint
     Give warnings about dubious or non-portable awk constructs.

 -W lint-old
 --lint-old
     Warn about constructs that are not available in the original V.7 Unix version of awk.

 -W posix
 --posix
     Use POSIX compatibility mode, 'gawk' extensions are turned off and additional restrictions apply.

 -W re-interval
 --re-interval
     Allow interval expressions, in regexps.

 -W source=PROGRAM-TEXT
 --source PROGRAM-TEXT
     Use PROGRAM-TEXT as awk program source code.
     This option allows mixing command line source code with source code from files, and is
     particularly useful for mixing command line programs with library functions.

 --
     Signal the end of options. This is useful to allow further arguments to the awk program
     itself to start with a '-'. This is mainly for consistency with POSIX argument parsing conventions.

'Program'
     A series of patterns and actions: see below


Example:

gawk -F: '{print $1}' /etc/passwd 
image001

-f: Read the AWK program source from the file program-file, instead of from the first command line argument. Multiple -f (or â€“file) options may be used.  

 
gawk -F: -f mobile.txt /etc/passwd 
image002


*See also: awk, oawk, nawk, egrep, expr, eval, for, grep, m4, tr