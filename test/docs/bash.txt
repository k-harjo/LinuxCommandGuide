bash - Open a new instance of the bash shell. 

Bash script is a plain text files with the “.sh” extension. It can be executed by invoking the Bash interpreter. A typical Bash script starts with a shebang (#!/bin/bash), which indicates the directory or path to the Bash interpreter. After the shebang, one can define variables and functions, use conditionals and loops and execute built-in commands like any other programming language. 


Syntax: 

      bash [options] [file] 


Examples: 

bash filename.sh 

The script will simply get executed after “sourcing” the file. The source command will execute the shell script as the default bash command provided you are in the bash shell.  You need to be in the bash shell to execute the script using the source command. 

image001 

Making the Script Executable with chmod 

This method allows you to run a Bash script as an executable, which means you can run it from anywhere in your environment as long as you have a Bash shell available. To make the script executable, you need to adjust its file permissions using the chmod command. 

First, navigate to the directory where your script is located. Then, run the following command to change the file’s mode, making it executable: 

chmod +x filename.sh   

The `+x` flag indicates that the file should be executable. If you are using Linux and are not the root user, you may need to use `sudo` before the `chmod` the command for permission. 

After you’ve granted execution permission, you can run the script with the following command, assuming you are in the same directory as the script: 

./filename.sh 

If you are not on the same path as the bash script, make sure you provide the relative path to the file or the bash script. 

./pathToTheFile.sh 

image002 

using chmod and executing the script. 

image003

Executing a script from a relative path. 